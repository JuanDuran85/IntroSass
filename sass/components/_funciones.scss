.seccion_seis {
   /* background: length(lista4); la propiedad length se utiliza para ver la cantidad de valores disponibles en una lista*/ 
   background: length($lista4); 
   /* Con list-separator podemos ver el tipo de separaci√≥n que existe en una variable del tipo lista*/
   background: list-separator($lista6);
   background: list-separator($lista4);
   /*La propiedad nth permite seleccionar un valor en especifico de una lista*/box-shadow: nth($lista6,2);
   -webkit-box-shadow: nth($lista6,1);
   -moz-box-shadow: nth($lista6,2);
   -o-box-shadow: nth($lista6,3);
   margin-top: $numero7;
   padding-top: nth($lista4,3);
   /* con la propiedad set-nth se puede modificar un valor en especifico de una lista de valores o estilos */
   border-top: set-nth($list1,2,dotted);
   /* con join se pueden unir mas de una lista e indicar el tipo de separador en el caso de ser necesario */
   h3{
       text-shadow: join($lista7, $lista8, comma);
   }
}

.seccion_siete {
    padding-top: 30px;
    font-family: append($typografia1 , opensans);

    p {
        text-shadow: zip(
            10px 30px 5px,
            $valores1,
            20px 2px 3px,
            red blue green
        );
    }
}

/* .seccion_siete_p {
    content: map-keys($map1);
    content: map-values($map1);
    content: map-has-key($map2,tamano2);
    content: map-get($map2, tamano1);
    content: inspect(map-merge($map1,$map2));
    content: inspect(map-remove($map2, tamano1));
} */


@function nombre_funcion ($lista10, $lista11) {
    $longitud1: length($lista10);
    $longitud2: length($lista11);

    @if $longitud1 == $longitud2 {
        @return "Las listas tienen la misma longitud";
    } @else {
        @return "las listas no tienen la misma longitud";
    }
}

.section_diez::after {
    content: nombre_funcion($valor_lista1, $valor_lista2);
}